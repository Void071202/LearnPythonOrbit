{"filter":false,"title":"auto_process_insulin.py","tooltip":"/AsamAminoClean/auto_process_insulin.py","undoManager":{"mark":8,"position":8,"stack":[[{"start":{"row":0,"column":0},"end":{"row":52,"column":0},"action":"insert","lines":["import re","import os","","# Folder input & output","RAW_DIR = \"raw_data\"","OUT_DIR = \"processed\"","","# Pastikan folder output ada","os.makedirs(OUT_DIR, exist_ok=True)","","def process_file(filepath):","    \"\"\"Bersihkan dan potong file insulin\"\"\"","    with open(filepath) as f:","        raw_data = f.read()","","    # Bersihkan data","    cleaned = raw_data.replace(\"ORIGIN\", \"\").replace(\"//\", \"\")","    cleaned = re.sub(r'[^a-zA-Z]', '', cleaned).lower()","","    # Nama file dasar","    filename = os.path.splitext(os.path.basename(filepath))[0]","","    # Simpan full sequence","    clean_file = os.path.join(OUT_DIR, f\"{filename}-seq-clean.txt\")","    with open(clean_file, \"w\") as f:","        f.write(cleaned)","","    print(f\"{filename}: Full sequence length = {len(cleaned)}\")","","    # Potong bagian","    lsinsulin = cleaned[0:24]","    binsulin = cleaned[24:54]","    cinsulin = cleaned[54:89]","    ainsulin = cleaned[89:110]","","    # Simpan bagian","    with open(os.path.join(OUT_DIR, f\"ls{filename}-seq-clean.txt\"), \"w\") as f: f.write(lsinsulin)","    with open(os.path.join(OUT_DIR, f\"b{filename}-seq-clean.txt\"), \"w\") as f: f.write(binsulin)","    with open(os.path.join(OUT_DIR, f\"c{filename}-seq-clean.txt\"), \"w\") as f: f.write(cinsulin)","    with open(os.path.join(OUT_DIR, f\"a{filename}-seq-clean.txt\"), \"w\") as f: f.write(ainsulin)","","    print(f\"  Signal (ls): {len(lsinsulin)} | B-chain: {len(binsulin)} | \"","          f\"C-peptide: {len(cinsulin)} | A-chain: {len(ainsulin)}\")","","def main():","    # Scan semua file di folder raw_data","    for file in os.listdir(RAW_DIR):","        if file.endswith(\".txt\"):","            process_file(os.path.join(RAW_DIR, file))","","if __name__ == \"__main__\":","    main()",""],"id":1}],[{"start":{"row":45,"column":4},"end":{"row":45,"column":40},"action":"remove","lines":["# Scan semua file di folder raw_data"],"id":2},{"start":{"row":45,"column":4},"end":{"row":45,"column":5},"action":"insert","lines":["\\"]},{"start":{"row":45,"column":5},"end":{"row":45,"column":6},"action":"insert","lines":["\\"]},{"start":{"row":45,"column":6},"end":{"row":45,"column":7},"action":"insert","lines":["\\"]},{"start":{"row":45,"column":7},"end":{"row":45,"column":8},"action":"insert","lines":["\\"]}],[{"start":{"row":45,"column":7},"end":{"row":45,"column":8},"action":"remove","lines":["\\"],"id":3},{"start":{"row":45,"column":6},"end":{"row":45,"column":7},"action":"remove","lines":["\\"]},{"start":{"row":45,"column":5},"end":{"row":45,"column":6},"action":"remove","lines":["\\"]},{"start":{"row":45,"column":4},"end":{"row":45,"column":5},"action":"remove","lines":["\\"]},{"start":{"row":45,"column":0},"end":{"row":45,"column":4},"action":"remove","lines":["    "]},{"start":{"row":44,"column":11},"end":{"row":45,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":51,"column":0},"action":"remove","lines":["import re","import os","","# Folder input & output","RAW_DIR = \"raw_data\"","OUT_DIR = \"processed\"","","# Pastikan folder output ada","os.makedirs(OUT_DIR, exist_ok=True)","","def process_file(filepath):","    \"\"\"Bersihkan dan potong file insulin\"\"\"","    with open(filepath) as f:","        raw_data = f.read()","","    # Bersihkan data","    cleaned = raw_data.replace(\"ORIGIN\", \"\").replace(\"//\", \"\")","    cleaned = re.sub(r'[^a-zA-Z]', '', cleaned).lower()","","    # Nama file dasar","    filename = os.path.splitext(os.path.basename(filepath))[0]","","    # Simpan full sequence","    clean_file = os.path.join(OUT_DIR, f\"{filename}-seq-clean.txt\")","    with open(clean_file, \"w\") as f:","        f.write(cleaned)","","    print(f\"{filename}: Full sequence length = {len(cleaned)}\")","","    # Potong bagian","    lsinsulin = cleaned[0:24]","    binsulin = cleaned[24:54]","    cinsulin = cleaned[54:89]","    ainsulin = cleaned[89:110]","","    # Simpan bagian","    with open(os.path.join(OUT_DIR, f\"ls{filename}-seq-clean.txt\"), \"w\") as f: f.write(lsinsulin)","    with open(os.path.join(OUT_DIR, f\"b{filename}-seq-clean.txt\"), \"w\") as f: f.write(binsulin)","    with open(os.path.join(OUT_DIR, f\"c{filename}-seq-clean.txt\"), \"w\") as f: f.write(cinsulin)","    with open(os.path.join(OUT_DIR, f\"a{filename}-seq-clean.txt\"), \"w\") as f: f.write(ainsulin)","","    print(f\"  Signal (ls): {len(lsinsulin)} | B-chain: {len(binsulin)} | \"","          f\"C-peptide: {len(cinsulin)} | A-chain: {len(ainsulin)}\")","","def main():","    for file in os.listdir(RAW_DIR):","        if file.endswith(\".txt\"):","            process_file(os.path.join(RAW_DIR, file))","","if __name__ == \"__main__\":","    main()",""],"id":4},{"start":{"row":0,"column":0},"end":{"row":62,"column":0},"action":"insert","lines":["import re","import os","import time","from watchdog.observers import Observer","from watchdog.events import FileSystemEventHandler","","RAW_DIR = \"raw_data\"","OUT_DIR = \"processed\"","os.makedirs(OUT_DIR, exist_ok=True)","","def process_file(filepath):","    \"\"\"Bersihkan dan potong file insulin\"\"\"","    with open(filepath) as f:","        raw_data = f.read()","","    # Bersihkan data","    cleaned = raw_data.replace(\"ORIGIN\", \"\").replace(\"//\", \"\")","    cleaned = re.sub(r'[^a-zA-Z]', '', cleaned).lower()","","    filename = os.path.splitext(os.path.basename(filepath))[0]","","    # Simpan full sequence","    clean_file = os.path.join(OUT_DIR, f\"{filename}-seq-clean.txt\")","    with open(clean_file, \"w\") as f:","        f.write(cleaned)","","    print(f\"[OK] {filename}: Full sequence length = {len(cleaned)}\")","","    # Potong bagian","    lsinsulin = cleaned[0:24]","    binsulin = cleaned[24:54]","    cinsulin = cleaned[54:89]","    ainsulin = cleaned[89:110]","","    # Simpan bagian","    with open(os.path.join(OUT_DIR, f\"ls{filename}-seq-clean.txt\"), \"w\") as f: f.write(lsinsulin)","    with open(os.path.join(OUT_DIR, f\"b{filename}-seq-clean.txt\"), \"w\") as f: f.write(binsulin)","    with open(os.path.join(OUT_DIR, f\"c{filename}-seq-clean.txt\"), \"w\") as f: f.write(cinsulin)","    with open(os.path.join(OUT_DIR, f\"a{filename}-seq-clean.txt\"), \"w\") as f: f.write(ainsulin)","","    print(f\"    Signal: {len(lsinsulin)}, B-chain: {len(binsulin)}, \"","          f\"C-peptide: {len(cinsulin)}, A-chain: {len(ainsulin)}\")","","class Watcher(FileSystemEventHandler):","    def on_created(self, event):","        if not event.is_directory and event.src_path.endswith(\".txt\"):","            print(f\"[NEW FILE DETECTED] {event.src_path}\")","            process_file(event.src_path)","","if __name__ == \"__main__\":","    event_handler = Watcher()","    observer = Observer()","    observer.schedule(event_handler, RAW_DIR, recursive=False)","    observer.start()","    print(f\"Watching folder '{RAW_DIR}' for new files...\")","","    try:","        while True:","            time.sleep(1)","    except KeyboardInterrupt:","        observer.stop()","    observer.join()",""]}],[{"start":{"row":6,"column":11},"end":{"row":6,"column":19},"action":"remove","lines":["raw_data"],"id":5},{"start":{"row":6,"column":11},"end":{"row":6,"column":12},"action":"insert","lines":["A"]},{"start":{"row":6,"column":12},"end":{"row":6,"column":13},"action":"insert","lines":["s"]},{"start":{"row":6,"column":13},"end":{"row":6,"column":14},"action":"insert","lines":["a"]},{"start":{"row":6,"column":14},"end":{"row":6,"column":15},"action":"insert","lines":["m"]}],[{"start":{"row":6,"column":11},"end":{"row":6,"column":15},"action":"remove","lines":["Asam"],"id":6},{"start":{"row":6,"column":11},"end":{"row":6,"column":26},"action":"insert","lines":["AsamAminoClean/"]}],[{"start":{"row":7,"column":20},"end":{"row":7,"column":21},"action":"insert","lines":["/"],"id":7}],[{"start":{"row":49,"column":0},"end":{"row":61,"column":19},"action":"remove","lines":["if __name__ == \"__main__\":","    event_handler = Watcher()","    observer = Observer()","    observer.schedule(event_handler, RAW_DIR, recursive=False)","    observer.start()","    print(f\"Watching folder '{RAW_DIR}' for new files...\")","","    try:","        while True:","            time.sleep(1)","    except KeyboardInterrupt:","        observer.stop()","    observer.join()"],"id":8},{"start":{"row":49,"column":0},"end":{"row":68,"column":19},"action":"insert","lines":["class InsulinHandler(FileSystemEventHandler):","    def on_created(self, event):","        if not event.is_directory and event.src_path.endswith(\".csv\"):","            print(f\"File baru terdeteksi: {event.src_path}\")","            os.system(f\"python3 insulin_cleaning.py {event.src_path}\")","","if __name__ == \"__main__\":","    path_to_watch = \"/home/ec2-user/environment/insulin_data\"  # path absolut","    event_handler = InsulinHandler()","    observer = Observer()","    observer.schedule(event_handler, path=path_to_watch, recursive=False)","    observer.start()","    print(f\"Watcher aktif memantau {path_to_watch} ...\")","","    try:","        while True:","            pass","    except KeyboardInterrupt:","        observer.stop()","    observer.join()"]}],[{"start":{"row":56,"column":63},"end":{"row":56,"column":77},"action":"remove","lines":["# path absolut"],"id":9}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":56,"column":63},"end":{"row":56,"column":63},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1755750904839,"hash":"58407a457aec3695acac948652367facb2fc3139"}